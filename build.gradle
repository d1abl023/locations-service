plugins {
    id 'application'
    id 'org.springframework.boot' version '2.6.4'
    id 'idea'
}

bootJar {
    archiveClassifier = ''
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

idea {
    module {
        sourceDirs += file("build/generated/sources/annotationProcessor/java/main")
        generatedSourceDirs += file("build/generated/sources/annotationProcessor/java/main")
    }
}

group 'me.andreisuruceanu'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.6.4'

    implementation 'org.springframework.security:spring-security-config:5.6.2'
    implementation 'org.springframework.security:spring-security-core:5.6.2'
    implementation 'org.springframework.security:spring-security-web:5.6.2'

    implementation 'org.hibernate:hibernate-core:5.6.5.Final'
    implementation 'com.vladmihalcea:hibernate-types-55:2.14.0'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.21'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.hibernate:hibernate-jpamodelgen:5.6.5.Final'

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.6.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.4'

    jar {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE

        from {
            configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        }
    }
}
